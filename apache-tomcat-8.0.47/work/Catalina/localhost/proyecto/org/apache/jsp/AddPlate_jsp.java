/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-05-11 13:31:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import restaurant.*;
import java.util.*;

public final class AddPlate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("restaurant");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"Error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset = \"UTF-8\">\n");
      out.write("\t\t<title>AÃ±adir plato</title>\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" integrity=\"sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\" crossorigin=\"anonymous\">\n");
      out.write("\t\t<style type = \"text/css\">\n");
      out.write("\t\t\t.centralbox{\n");
      out.write("\t\t\t\tbackground-color: rgba(228, 169, 46, 0.72);\n");
      out.write("\t\t\t\tborder-radius: 20%;\n");
      out.write("\t\t\t\twidth: 400px;\n");
      out.write("\t\t\t\theight: 400px;\n");
      out.write("\t\t\t\tposition: absolute;\n");
      out.write("\t\t\t\ttop: 40%;\n");
      out.write("\t\t\t\tleft: 45%;\n");
      out.write("\t\t\t\tmargin-top: -100px;\n");
      out.write("\t\t\t\tmargin-left: -125px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.in{\n");
      out.write("\t\t\t\tmargin: .3em 40%;\n");
      out.write("\t\t\t\ttext-align: center;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.bt{\n");
      out.write("\t\t\t\tmargin-top: 20px;\n");
      out.write("\t\t\t\tmargin-left: 37.5%;\n");
      out.write("\t\t\t    padding:10px 25px;\n");
      out.write("\t\t\t    background:#7eb9dc;\n");
      out.write("\t\t\t    border:0 none;\n");
      out.write("\t\t\t    border-radius: 7px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tlabel{\n");
      out.write("\t\t\t\tmargin-top: 20px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.inp{\n");
      out.write("    \t\t\tpadding:5px;\n");
      out.write("    \t\t\tborder:2px solid #7eb9dc;\n");
      out.write("   \t\t\t\tborder-radius: 7px;\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.inp1{ margin-left: 26%;}\n");
      out.write("\t\t\t.inp2{ margin-left: 35%;}\n");
      out.write("\t\t</style>\n");
      out.write("\t</head>\n");
      out.write("\t<body background = \"prueba.jpg\" width = \"100%\" heigth = \"100%\">\n");
      out.write("\t\t");
 String [] id_rest_str = request.getParameterValues("idrest"); 
      out.write("\n");
      out.write("\n");
      out.write("\t\t<div class  =\"centralbox\">\n");
      out.write("\t\t\t<form action=\"addplate\" class=\"form-horizontal\">\n");
      out.write("\t\t\t\t<div class = \"in\">\n");
      out.write("\t\t\t\t\t<label><strong>Nombre:</strong></label>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div \"form-group\">\n");
      out.write("\t\t\t\t\t\t<input type= \"text\" class=\"inp1 inp\" name = \"nameplate\" required>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class = \"in\">\n");
      out.write("\t\t\t\t\t<label><strong>Precio:</strong></label>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div \"form-group\">\n");
      out.write("\t\t\t\t\t\t<input type= \"number\" class=\"inp2 inp\" name = \"precio\" min = \"0\" max = \"9999.99\" step =\"0.01\" required>\t\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class = \"in\">\n");
      out.write("\t\t\t\t\t<label><strong>Descripcion:</strong></label>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div \"form-group\">\n");
      out.write("\t\t\t\t\t\t<input type= \"text\" class=\"inp1 inp\" name = \"descripcion\" required>\t\t\t\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div \"form-group\">\n");
      out.write("\t\t\t\t\t\t<input type= \"submit\" class=\"bt\" name = \"send\" value = \"Enviar\">\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name = \"idrest\" value = \"");
      out.print(id_rest_str[0]);
      out.write("\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\t\n");
      out.write("\t</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
